package org.vote

object Box {
	var votes:List[Vote] = List[Vote]()
	var recountAlgorytm: List[Vote] => List[AnyRef] = null
	def addVote(vote : Vote){
	  this.votes = vote :: votes
	}
	
	def countFirstOcurrence(){
	  val head :: tail = votes
	  val v = countOcurrencesOf(head , tail,0)
	  println("oa")
	  println(v)
	  println("oa2")
	}
	
	def countOcurrencesOf(E:Vote, list:List[Vote],Count:Integer) : Integer = {
	  // Primero obtengo la cantidad de veces que se repitiÃ³ el primer elemento
	  if(list == null)
	    return Count
	    
	  val head :: tail = votes
	  println(E)
	  return countOcurrencesOf(E,tail,
	  head.elem match {
	    case E => Count +1
	    case _ => Count
	  })
	}
	
}