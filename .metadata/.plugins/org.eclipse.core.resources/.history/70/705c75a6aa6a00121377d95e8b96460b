package org.vote

object Box {
	var votes:List[Vote] = List[Vote]()
	var recountAlgorytm: List[Vote] => List[AnyRef] = null
	def addVote(vote : Vote){
	  this.votes = vote :: votes
	}
	
	def countFirstOcurrence(){
	  val head :: tail = votes
	  val v = countOcurrencesOf(head , tail)
	  println(v)
	}
	
	def countOcurrencesOf(elem:Vote, list:List[Vote],count:Integer){
	  // Primero obtengo la cantidad de veces que se repiti√≥ el primer elemento
	  val head :: tail = votes
	  
	  if(head.elem == elem)
		  newCount = count +1
	  
	}
	
	def theWinnerIs(elem:Vote, list:List[Vote]){
	  
	}
}